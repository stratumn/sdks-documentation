(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{85:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return u})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return d}));var n=a(3),r=a(7),c=(a(0),a(93)),l=a(96),o=a(97),s=["components"],i={title:"\ud83d\udc80 Deprecated"},u={unversionedId:"configuration/deprecated",id:"configuration/deprecated",isDocsHomePage:!1,title:"\ud83d\udc80 Deprecated",description:"The following functionality will no longer be supported in future releases.",source:"@site/docs/configuration/deprecated.mdx",slug:"/configuration/deprecated",permalink:"/sdks-documentation/docs/configuration/deprecated",editUrl:"https://github.com/stratumn/sdks-documentation/blob/master/docs/configuration/deprecated.mdx",version:"current",sidebar:"configuration",previous:{title:"\ud83d\udcbe Handling files",permalink:"/sdks-documentation/docs/configuration/handling-files"}},p=[{value:"Requesting the transfer of ownership of a trace",id:"requesting-the-transfer-of-ownership-of-a-trace",children:[]},{value:"Responding to a transfer of ownership of a trace",id:"responding-to-a-transfer-of-ownership-of-a-trace",children:[]},{value:"Trace stages",id:"trace-stages",children:[]}],b={toc:p};function d(e){var t=e.components,a=Object(r.a)(e,s);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The following functionality will no longer be supported in future releases."),Object(c.b)("h3",{id:"requesting-the-transfer-of-ownership-of-a-trace"},"Requesting the transfer of ownership of a trace"),Object(c.b)("p",null,'You can "push" the trace to another group in the workflow this way:'),Object(c.b)(l.a,{groupId:"choosen-language",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"C#",value:"csharp"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(c.b)(o.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'await sdk.pushTrace({\n  prevLink, // or traceId\n  recipient: YOUR_CONFIG.otherGroup,\n  data: {\n    why: "because",\n  },\n});\n'))),Object(c.b)(o.a,{value:"csharp",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cs"},'IDictionary<string, object> data = new Dictionary<string, object>() { { "why", "because im testing the pushTrace 2" } };\n\nPushTransferInput<object> push = new PushTransferInput<object>(TraceId, recipient, data, prevLink);\nsomeTraceState = await GetSdk().PushTraceAsync<object>(push);\n'))),Object(c.b)(o.a,{value:"java",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},'Map<String, Object> data =new HashMap<String, Object>( Collections.singletonMap("why", "because I\'m testing the pushTrace 2"));\n\nPushTransferInput<Object> push = new PushTransferInput<Object>(recipient, data, prevLink);\nsomeTraceState = sdk.pushTrace<Object>(push);\n\n')))),Object(c.b)("p",null,"The arguments are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"recipient"),": the id of the group to push the trace to,"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"data"),": (optional) some data related to the push transfer,"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"prevLink")," or ",Object(c.b)("inlineCode",{parentName:"li"},"traceId"),".")),Object(c.b)("p",null,'You can also "pull" an existing trace from another group:'),Object(c.b)(l.a,{groupId:"choosen-language",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"C#",value:"csharp"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(c.b)(o.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'await sdk.pullTrace({\n  prevLink, // or traceId\n  data: {\n    why: "because",\n  },\n});\n'))),Object(c.b)(o.a,{value:"csharp",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cs"},'IDictionary<string, string> data = new Dictionary<string, string>() { { "why", "because im testing the pushTrace 2" } };\n\nPullTransferInput<object> pull = new PullTransferInput<object>(TraceId, data, prevLink);\nTraceState<object, object> statepul = await GetSdk().PullTraceAsync(pull);\n'))),Object(c.b)(o.a,{value:"java",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},'Map<String, Object> data =new HashMap<String, Object>( Collections.singletonMap("why", "because I\'m testing the pushTrace 2"));\nPullTransferInput<Object> pull = new PullTransferInput<Object>(TraceId, data, prevLink);\nTraceState<Object, Object> statepul =  sdk.pullTrace(pull);\n')))),Object(c.b)("p",null,"And in this case, the arguments are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"data"),": (optional) some data related to the pull transfer,"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"prevLink")," or ",Object(c.b)("inlineCode",{parentName:"li"},"traceId"),".")),Object(c.b)("p",null,"The Sdk will return the new state object of the trace. The shape of this object is the same as explained ",Object(c.b)("a",{parentName:"p",href:"#creating-a-new-trace"},"previously"),"."),Object(c.b)("p",null,"Notes:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"In both cases, the trace is not transferred automatically to or from the group. The recipient must respond to your request as we will see in the ",Object(c.b)("a",{parentName:"li",href:"#responding-to-a-transfer-of-ownership-of-a-trace"},"next section"),"."),Object(c.b)("li",{parentName:"ul"},"You don't need to provide a ",Object(c.b)("inlineCode",{parentName:"li"},"recipient")," in the case of a ",Object(c.b)("inlineCode",{parentName:"li"},"pullTransfer")," since the two parties of the transfer can be inferred (you and the current owner of the trace)."),Object(c.b)("li",{parentName:"ul"},"The ",Object(c.b)("inlineCode",{parentName:"li"},"data")," object argument is optional. When it is provided, it is a free form object that will not be validated against a JSON schema.")),Object(c.b)("h3",{id:"responding-to-a-transfer-of-ownership-of-a-trace"},"Responding to a transfer of ownership of a trace"),Object(c.b)("p",null,"When someone pushed a trace to your group, you can either accept or reject the transfer:"),Object(c.b)(l.a,{groupId:"choosen-language",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"C#",value:"csharp"},{label:"Java",value:"java"}],mdxType:"Tabs"},Object(c.b)(o.a,{value:"js",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"await sdk.acceptTransfer({\n  prevLink, // or traceId\n});\n")),Object(c.b)("p",null,"Or:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'await sdk.rejectTransfer({\n  prevLink, // or traceId\n  data: {\n    reason: "no way!",\n  },\n});\n')),Object(c.b)("p",null,"Alternatively, if you have initiated the transfer (push or pull), you can also before it has been accepted:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"await sdk.cancelTransfer({\n  prevLink, // or traceId\n});\n"))),Object(c.b)(o.a,{value:"csharp",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cs"},"TransferResponseInput<Object> trInput = new TransferResponseInput<Object>(TraceId, null, null);\nTraceState<Object, Object> stateAccept = await GetSdk().AcceptTransferAsync(trInput);\n")),Object(c.b)("p",null,"Or:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cs"},"TransferResponseInput<Object> trInput = new TransferResponseInput<Object>(traceId, null, null);\nTraceState<Object, Object> stateReject = await GetSdk().RejectTransferAsync(trInput);\n")),Object(c.b)("p",null,"Alternatively, if you have initiated the transfer (push or pull), you can also cancel before it has been accepted:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cs"},"TransferResponseInput<Object> responseInput = new TransferResponseInput<Object>(TraceId, null, null);\nTraceState<Object, Object> statecancel = await GetSdk().CancelTransferAsync(responseInput);\n"))),Object(c.b)(o.a,{value:"java",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"TransferResponseInput<Object> trInput = new TransferResponseInput<Object>(null,traceId);\nTraceState<Object, Object> stateAccept = sdk.acceptTransfer(trInput);\n")),Object(c.b)("p",null,"Or:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"TransferResponseInput<Object> trInput = new TransferResponseInput<Object>(null, traceId);\nTraceState<Object, Object> stateReject = sdk.rejectTransfer(trInput);\n")),Object(c.b)("p",null,"Alternatively, if you have initiated the transfer (push or pull), you can also cancel before it has been accepted:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"TransferResponseInput<Object> responseInput = new TransferResponseInput<Object>(null, traceId);\nTraceState<Object, Object> stateCancel = sdk.cancelTransfer(responseInput);\n")))),Object(c.b)("p",null,"In all cases, the arguments are:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"data"),": (optional) some data related to the pull transfer,"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"prevLink")," or ",Object(c.b)("inlineCode",{parentName:"li"},"traceId"),".")),Object(c.b)("p",null,"The Sdk will return the new state object of the trace. The shape of this object is the same as explained ",Object(c.b)("a",{parentName:"p",href:"#creating-a-new-trace"},"previously"),"."),Object(c.b)("p",null,"Notes:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"The ",Object(c.b)("inlineCode",{parentName:"li"},"data")," object argument is optional. When it is provided, it is a free form object that will not be validated against a JSON schema.")),Object(c.b)("h3",{id:"trace-stages"},"Trace stages"),Object(c.b)("p",null,"Your group in the workflow is composed of multiple stages. There are always 3 default stages:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Incoming"),": this stage lists all the traces that are being transferred to your group (push or pull),"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Backlog"),": this stage lists all the traces that have been transferred to your group and accepted,"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Outgoing"),": this stage lists all the traces that are being transferred to another group (push or pull).")),Object(c.b)("p",null,"The other stages are called ",Object(c.b)("inlineCode",{parentName:"p"},"Attestation")," stages. They compose the logic of your group in the context of this workflow."),Object(c.b)("p",null,"Notes:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"When someone pushes a trace to your group, it will appear in your ",Object(c.b)("inlineCode",{parentName:"li"},"Incoming")," stage and their ",Object(c.b)("inlineCode",{parentName:"li"},"Outgoing")," stage."),Object(c.b)("li",{parentName:"ul"},"When you accept a transfer, the trace will move to your ",Object(c.b)("inlineCode",{parentName:"li"},"Backlog")," stage."),Object(c.b)("li",{parentName:"ul"},"When you reject a transfer, the trace will move back to its previous ",Object(c.b)("inlineCode",{parentName:"li"},"Attestation")," stage and disappear from the ",Object(c.b)("inlineCode",{parentName:"li"},"Outgoing")," and ",Object(c.b)("inlineCode",{parentName:"li"},"Incoming")," stages it was in.")))}d.isMDXComponent=!0},91:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},93:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),u=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,j=p["".concat(l,".").concat(d)]||p[d]||b[d]||c;return a?r.a.createElement(j,o(o({ref:t},i),{},{components:a})):r.a.createElement(j,o({ref:t},i))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var i=2;i<c;i++)l[i]=a[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},94:function(e,t,a){"use strict";var n=a(0),r=a(95);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},95:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},96:function(e,t,a){"use strict";var n=a(0),r=a.n(n),c=a(94),l=a(91),o=a(56),s=a.n(o);var i=37,u=39;t.a=function(e){var t=e.lazy,a=e.block,o=e.defaultValue,p=e.values,b=e.groupId,d=e.className,j=Object(c.a)(),f=j.tabGroupChoices,m=j.setTabGroupChoices,O=Object(n.useState)(o),h=O[0],g=O[1],v=n.Children.toArray(e.children),y=[];if(null!=b){var T=f[b];null!=T&&T!==h&&p.some((function(e){return e.value===T}))&&g(T)}var w=function(e){var t=e.target,a=y.indexOf(t),n=v[a].props.value;g(n),null!=b&&(m(b,n),setTimeout((function(){var e,a,n,r,c,l,o,i;(e=t.getBoundingClientRect(),a=e.top,n=e.left,r=e.bottom,c=e.right,l=window,o=l.innerHeight,i=l.innerWidth,a>=0&&c<=i&&r<=o&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s.a.tabItemActive),setTimeout((function(){return t.classList.remove(s.a.tabItemActive)}),2e3))}),150))},N=function(e){var t,a;switch(e.keyCode){case u:var n=y.indexOf(e.target)+1;a=y[n]||y[0];break;case i:var r=y.indexOf(e.target)-1;a=y[r]||y[y.length-1]}null===(t=a)||void 0===t||t.focus()};return r.a.createElement("div",{className:"tabs-container"},r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":a},d)},p.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:h===t?0:-1,"aria-selected":h===t,className:Object(l.a)("tabs__item",s.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:N,onFocus:w,onClick:w},a)}))),t?Object(n.cloneElement)(v.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},97:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){var t=e.children,a=e.hidden,n=e.className;return r.a.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}}}]);